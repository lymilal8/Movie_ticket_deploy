{"ast":null,"code":"var _jsxFileName = \"F:\\\\Movie_ticket\\\\frontend\\\\src\\\\components\\\\MovieBooking.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport './styles/Seat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieBooking = () => {\n  _s();\n  const {\n    movieId\n  } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedSeats, setSelectedSeats] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/getmovie/${movieId}`);\n        console.log(response.data);\n        setMovieData(response.data);\n      } catch (error) {\n        console.error('Error fetching movie data:', error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedSeats([]); // Reset selected seats when closing the modal\n  };\n\n  const handleSeatClick = seatNumber => {\n    // Toggle the selected state of the seat\n    const isSelected = selectedSeats.includes(seatNumber);\n    const updatedSeats = isSelected ? selectedSeats.filter(seat => seat !== seatNumber) : [...selectedSeats, seatNumber];\n\n    // Update the selected seats state\n    setSelectedSeats(updatedSeats);\n  };\n  const handleBookTicket = async () => {\n    // Implement logic to book tickets and update collections\n    try {\n      // Make a POST request to your backend to book tickets\n      const response = await axios.post('http://localhost:3000/api/booktickets', {\n        movieId,\n        seatNumbers: selectedSeats\n      });\n\n      // Display success message or handle further actions\n      console.log('Booking successful:', response.data);\n\n      // After successful booking, you can close the modal and show a confirmation message.\n      closeModal();\n    } catch (error) {\n      console.error('Error booking tickets:', error);\n    }\n  };\n  if (!movieData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    no_seats\n  } = movieData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Book Tickets\",\n      style: {\n        content: {\n          width: '600px',\n          margin: 'auto'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seat-matrix\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Your Seats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"matrix-container\",\n          children: Array.from({\n            length: no_seats\n          }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `seat ${selectedSeats.includes(index + 1) ? 'selected' : ''}`,\n            onClick: () => handleSeatClick(index + 1),\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleBookTicket,\n        children: \"Book Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieBooking, \"9UIiuO25030AkZTvWjQAGMgScPY=\", false, function () {\n  return [useParams];\n});\n_c = MovieBooking;\nexport default MovieBooking;\nvar _c;\n$RefreshReg$(_c, \"MovieBooking\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","Modal","jsxDEV","_jsxDEV","MovieBooking","_s","movieId","movieData","setMovieData","isModalOpen","setIsModalOpen","selectedSeats","setSelectedSeats","fetchData","response","get","console","log","data","error","openModal","closeModal","handleSeatClick","seatNumber","isSelected","includes","updatedSeats","filter","seat","handleBookTicket","post","seatNumbers","children","fileName","_jsxFileName","lineNumber","columnNumber","no_seats","isOpen","onRequestClose","contentLabel","style","content","width","margin","className","Array","from","length","_","index","onClick","_c","$RefreshReg$"],"sources":["F:/Movie_ticket/frontend/src/components/MovieBooking.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal';\r\nimport './styles/Seat.css';\r\n\r\nconst MovieBooking = () => {\r\n  const { movieId } = useParams();\r\n  const [movieData, setMovieData] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedSeats, setSelectedSeats] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/api/getmovie/${movieId}`);\r\n        console.log(response.data);\r\n        setMovieData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching movie data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [movieId]);\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedSeats([]); // Reset selected seats when closing the modal\r\n  };\r\n\r\n  const handleSeatClick = (seatNumber) => {\r\n    // Toggle the selected state of the seat\r\n    const isSelected = selectedSeats.includes(seatNumber);\r\n    const updatedSeats = isSelected\r\n      ? selectedSeats.filter((seat) => seat !== seatNumber)\r\n      : [...selectedSeats, seatNumber];\r\n\r\n    // Update the selected seats state\r\n    setSelectedSeats(updatedSeats);\r\n  };\r\n\r\n  const handleBookTicket = async () => {\r\n    // Implement logic to book tickets and update collections\r\n    try {\r\n      // Make a POST request to your backend to book tickets\r\n      const response = await axios.post('http://localhost:3000/api/booktickets', {\r\n        movieId,\r\n        seatNumbers: selectedSeats,\r\n      });\r\n\r\n      // Display success message or handle further actions\r\n      console.log('Booking successful:', response.data);\r\n\r\n      // After successful booking, you can close the modal and show a confirmation message.\r\n      closeModal();\r\n    } catch (error) {\r\n      console.error('Error booking tickets:', error);\r\n    }\r\n  };\r\n\r\n  if (!movieData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const { no_seats } = movieData;\r\n\r\n  return (\r\n    <div>\r\n      {/* ... (Your existing code) */}\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={closeModal}\r\n        contentLabel=\"Book Tickets\"\r\n        style={{\r\n          content: {\r\n            width: '600px',\r\n            margin: 'auto',\r\n          },\r\n        }}\r\n      >\r\n        {/* ... (Your existing code) */}\r\n        {/* Seat Booking Matrix */}\r\n        <div className=\"seat-matrix\">\r\n          <h3>Select Your Seats</h3>\r\n          <div className=\"matrix-container\">\r\n            {Array.from({ length: no_seats }, (_, index) => (\r\n              <div\r\n                key={index}\r\n                className={`seat ${selectedSeats.includes(index + 1) ? 'selected' : ''}`}\r\n                onClick={() => handleSeatClick(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {/* ... (Your existing code) */}\r\n        {/* Add a form or any additional UI for the booking process */}\r\n        <button className=\"button\" onClick={handleBookTicket}>\r\n          Book Ticket\r\n        </button>\r\n      </Modal>\r\n      {/* ... (Your existing code) */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieBooking;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}